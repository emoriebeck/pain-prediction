geom_rect(xmin=-Inf
,xmax=Inf
,ymin=-Inf
,ymax=0
,fill="white"
, color=NA) +
scale_y_continuous(limits=c(-5,5.5)
, expand=c(0,0)
, breaks=seq(1,5,2)
, labels = NULL) +
scale_size_continuous(range = c(.5,8)
, limits = lim
, breaks = brks) +
scale_alpha_continuous(range = c(.3, 1)
, limits = lim
, breaks = brks) +
scale_fill_manual(
values = c("deepskyblue4", "seagreen3", "lightgoldenrod1")
, drop = F
) +
# Polar coordinates
coord_polar() +
# The angle for the symptoms and remove the default grid lines
theme_classic()+
theme(axis.text.x = element_text(angle = 360/(2*pi)*rev( pi/2 + seq(pi/69, 2*pi-pi/69, len=69)) + c(rep(0,floor(69/2)), rep(180,ceiling(69/2))), size = rel(1.1), face = "bold")
, panel.border = element_blank()
, axis.line = element_blank()
, axis.ticks = element_blank()
, panel.grid = element_blank()
, panel.background = element_blank()
, legend.position="bottom"
# , legend.position = "none"
# legend.direction = "vertical",
, plot.margin = margin(t = .5, r = 0, l = 0, b = 0, unit = "cm")
, plot.title = element_text(face = "bold", hjust = .5)
, strip.background = element_blank()
, strip.text = element_text(face = "bold", size = rel(1.2))
) +
labs(size = "% Participants"
, fill = "Model"
, alpha = "% Participants"
, title = o) +
guides(size = guide_legend(title.position="top", title.hjust = 0.5)
, fill = guide_legend(title.position="top", title.hjust = 0.5) #"none"
, alpha = guide_legend(title.position="top", title.hjust = 0.5)
, shape = guide_legend(title.position="top", title.hjust = 0.5))
return(p1)
}
var_freq_p <- var_freq %>%
group_by(outcome) %>%
nest() %>%
ungroup() %>%
mutate(p = map2(data, outcome, var_freq_plot_fun))
var_freq_p
p3 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, .$names)) %>%
ggplot(aes(x = 1, y = 1:69)) +
geom_text(aes(label = rev(names)), hjust = 0, size = 3) +
scale_x_continuous(limits = c(.9999, 1.1))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p3
var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, .$names))
var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, .$names))
p4 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, .$names)
, gr = ifelse(row_number() < 36, 1, 2)) %>%
ggplot(aes(x = gr, y = 1:35)) +
geom_text(aes(label = rev(names)), hjust = 0, size = 3) +
scale_x_continuous(limits = c(.9999, 1.1))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p4
p4 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, .$names)
, gr = ifelse(row_number() < 36, 1, 2)) %>%
group_by(gr) %>%
mutate(y = 1:n()) %>%
ungroup() %>%
ggplot(aes(x = gr, y = y)) +
geom_text(aes(label = rev(names)), hjust = 0, size = 3) +
scale_x_continuous(limits = c(.9999, 1.1))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p4
var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, .$names)
, gr = ifelse(row_number() < 36, 1, 2)) %>%
group_by(gr) %>%
mutate(y = 1:n())
p4 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, rev(.$names))
, gr = ifelse(row_number() < 36, 1, 2)) %>%
group_by(gr) %>%
mutate(y = 1:n()) %>%
ungroup() %>%
ggplot(aes(x = gr, y = y)) +
geom_text(aes(label = names), hjust = 0, size = 3) +
scale_x_continuous(limits = c(.9999, 1.1))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p4
, gr = ifelse(row_number() < 36, 1, 2)) %>%
group_by(gr) %>%
mutate(y = 1:n()) %>%
ungroup() %>%
ggplot(aes(x = gr, y = y)) +
geom_text(aes(label = names), hjust = 0, size = 3) +
# scale_x_continuous(limits = c(.9999, 1.1))+
theme_classic() +
theme(axis.line = element_blank()
p4
p4
p4 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, rev(.$names))
, gr = ifelse(row_number() < 36, 1, 2)) %>%
group_by(gr) %>%
mutate(y = 1:n()) %>%
ungroup() %>%
ggplot(aes(x = gr, y = y)) +
geom_text(aes(label = names), hjust = 0, size = 3) +
# scale_x_continuous(limits = c(.9999, 1.1))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p4
p4 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, rev(.$names))
, gr = ifelse(row_number() < 36, 1, 1.5)) %>%
group_by(gr) %>%
mutate(y = 1:n()) %>%
ungroup() %>%
ggplot(aes(x = gr, y = y)) +
geom_text(aes(label = names), hjust = 0, size = 3) +
# scale_x_continuous(limits = c(.9999, 1.1))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p4
p4 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, rev(.$names))
, gr = ifelse(row_number() < 36, 1, 1.5)) %>%
group_by(gr) %>%
mutate(y = 1:n()) %>%
ungroup() %>%
ggplot(aes(x = gr, y = y)) +
geom_text(aes(label = names), hjust = 0, size = 3) +
# scale_x_continuous(limits = c(.9999, 1.1))+
scale_x_continuous(limits = c(.9999, 2))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p4
p4 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, rev(.$names))
, gr = ifelse(row_number() < 36, 1, 1.5)) %>%
group_by(gr) %>%
mutate(y = 1:n()) %>%
ungroup() %>%
ggplot(aes(x = gr, y = y)) +
geom_text(aes(label = names), hjust = 0, size = 3) +
# scale_x_continuous(limits = c(.9999, 1.1))+
scale_x_continuous(limits = c(.9999, 1.6))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p4
p4 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, rev(.$names))
, gr = ifelse(row_number() < 36, 1, 1.5)) %>%
group_by(gr) %>%
mutate(y = 1:n()) %>%
ungroup() %>%
ggplot(aes(x = gr, y = y)) +
geom_text(aes(label = names), hjust = 0, size = 3) +
# scale_x_continuous(limits = c(.9999, 1.1))+
scale_x_continuous(limits = c(.9999, 1.75))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p4
p4 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, rev(.$names))
, gr = ifelse(row_number() < 36, 1, 1.5)) %>%
group_by(gr) %>%
mutate(y = 1:n()) %>%
ungroup() %>%
ggplot(aes(x = gr, y = y)) +
geom_text(aes(label = names), hjust = 0, size = 3) +
# scale_x_continuous(limits = c(.9999, 1.1))+
scale_x_continuous(limits = c(.9999, 1.8))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p4
var_freq_p
var_freq_p
function(p, outcome){
p <- plot_grid(p, p3, nrow = 1, rel_widths = c(.5, .5))
ggsave(p, file = sprintf("%s/05-results/05-figures/06-var-freq/%s.pdf", local_path, outcome)
, height = 9 , width = 12)
ggsave(p, file = sprintf("%s/05-results/05-figures/06-var-freq/%s.png", local_path, outcome)
, height = 9 , width = 12)
}
save_var_freq <- function(p, outcome){
p <- plot_grid(p, p3, nrow = 1, rel_widths = c(.5, .5))
ggsave(p, file = sprintf("%s/05-results/05-figures/06-var-freq/%s.pdf", local_path, outcome)
, height = 9 , width = 12)
ggsave(p, file = sprintf("%s/05-results/05-figures/06-var-freq/%s.png", local_path, outcome)
, height = 9 , width = 12)
}
var_freq_p %>%
mutate(p = map2(p, outcome, save_var_freq))
save_var_freq <- function(p, outcome){
p <- plot_grid(p, p4, nrow = 1, rel_widths = c(.5, .5))
ggsave(p, file = sprintf("%s/05-results/05-figures/06-var-freq/%s.pdf", local_path, outcome)
, height = 9 , width = 12)
ggsave(p, file = sprintf("%s/05-results/05-figures/06-var-freq/%s.png", local_path, outcome)
, height = 9 , width = 12)
}
var_freq_p %>%
mutate(p = map2(p, outcome, save_var_freq))
p4 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, .$names)
, gr = ifelse(row_number() < 36, 1, 1.5)) %>%
group_by(gr) %>%
mutate(y = 1:n()) %>%
ungroup() %>%
ggplot(aes(x = gr, y = y)) +
geom_text(aes(label = rev(names)), hjust = 0, size = 3) +
# scale_x_continuous(limits = c(.9999, 1.1))+
scale_x_continuous(limits = c(.9999, 1.8))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p4
p4 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, .$names)
, gr = ifelse(row_number() < 36, 1.5, 1)) %>%
group_by(gr) %>%
mutate(y = 1:n()) %>%
ungroup() %>%
ggplot(aes(x = gr, y = y)) +
geom_text(aes(label = rev(names)), hjust = 0, size = 3) +
# scale_x_continuous(limits = c(.9999, 1.1))+
scale_x_continuous(limits = c(.9999, 1.8))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p4
p4 <- var_freq %>%
select(new_name, Variable2) %>%
distinct() %>%
mutate(new_name = factor(new_name, ftrs$new_name),
names = paste0(Variable2, ": ", new_name)) %>%
arrange(Variable2) %>%
mutate(names = factor(names, .$names)
, gr = ifelse(row_number() < 35, 1.5, 1)) %>%
group_by(gr) %>%
mutate(y = 1:n()) %>%
ungroup() %>%
ggplot(aes(x = gr, y = y)) +
geom_text(aes(label = rev(names)), hjust = 0, size = 3) +
# scale_x_continuous(limits = c(.9999, 1.1))+
scale_x_continuous(limits = c(.9999, 1.8))+
theme_classic() +
theme(axis.line = element_blank()
, axis.text = element_blank()
, axis.ticks = element_blank()
, axis.title = element_blank())
p4
save_var_freq <- function(p, outcome){
p <- plot_grid(p, p4, nrow = 1, rel_widths = c(.5, .5))
ggsave(p, file = sprintf("%s/05-results/05-figures/06-var-freq/%s.pdf", local_path, outcome)
, height = 9 , width = 12)
ggsave(p, file = sprintf("%s/05-results/05-figures/06-var-freq/%s.png", local_path, outcome)
, height = 9 , width = 12)
}
var_freq_p %>%
mutate(p = map2(p, outcome, save_var_freq))
var_freq_p
runApp('~/Library/CloudStorage/Box-Box/network/other projects/idio prediction/behavior-prediction')
900/4*3
runApp('~/Library/CloudStorage/Box-Box/network/other projects/idio prediction/behavior-prediction')
runApp('~/Library/CloudStorage/Box-Box/network/other projects/idio prediction/behavior-prediction')
runApp('~/Library/CloudStorage/Box-Box/network/other projects/idio prediction/behavior-prediction')
runApp('~/Library/CloudStorage/Box-Box/network/other projects/idio prediction/behavior-prediction')
profile_plot_fun <- function(d, model, metric, outcome){
o <- mapvalues(outcome, outcomes$trait, outcomes$long_name, warn_missing = F)
mod <- mapvalues(model, c("glmnet", "biscwit", "rf"), c("Elastic Net", "BISCWIT", "Random Forest"), warn_missing = F)
m <- mapvalues(metric, c("accuracy", "roc_auc"), c("Accuracy", "AUC"), warn_missing = F)
ttl <- sprintf("%s Predicting Future %s Using Best %s Models", mod, o, m)
min <- if(model == "glmnet") 5 else if (model == "biscwit") 1 else max(abs(d$coef), na.rm = T)
p <- d %>%
mutate(coef = ifelse(coef == 0, NA, coef)
, coef = ifelse(coef > min, min, ifelse(coef < -1*min, -1*min, coef))
, group = str_to_title(group)
, new_name = factor(new_name, rev(ftrs$new_name))) %>%
drop_na() %>%
ggplot(aes(x = SID, y = new_name, color = coef)) +
scale_color_gradient2(low = "blue"
, mid = "white"
, high = "red"
# , limits = c(-5,5)
) +
geom_point() +
labs(x = "Participant ID", y = NULL, color = "Coefficient"
, title = ttl) +
facet_grid(group ~ ., space = "free", scale = "free") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, face = "bold")
, axis.text.y = element_text(face = "bold")
, plot.title = element_text(hjust = .5, face = "bold")
, legend.position = "bottom"
, strip.background = element_rect(fill = "black")
, strip.text = element_text(face = "bold", color = "white", size = rel(1.2))
)
ggsave(p, file = sprintf("%s/05-results/05-figures/03-px-profiles/%s_%s_%s.pdf"
, local_path, outcome, model, metric)
, width = 12, height = 10)
ggsave(p, file = sprintf("%s/05-results/05-figures/03-px-profiles/png/%s_%s_%s.png"
, local_path, outcome, model, metric)
, width = 12, height = 10)
return(p)
}
procor_fun <- function(d){
m <- d %>%
select(-SID) %>%
mutate_all(~ifelse(is.na(.), 0, .)) %>%
as.matrix(); rownames(m) <- d$SID
r <- cor(t(m))
diag(r) <- NA
rd <- r %>% data.frame() %>%
rownames_to_column("SID1") %>%
pivot_longer(cols = -SID1
, names_to = "SID2"
, values_to = "r"
, values_drop_na = T) %>%
mutate(SID2 = str_remove_all(SID2, "X"))
r %>%
mutate(r = fisherz(r)) %>%
group_by(SID1) %>%
summarize_at(vars(r), lst(mean, min, max))
}
profile_sim <- param_res %>%
select(-params) %>%
right_join(best_mods %>% select(model:.metric)) %>%
filter(map_lgl(coefs, is.null) == F) %>%
mutate(coefs = map(coefs, ~(.) %>%
data.frame() %>%
rownames_to_column("Variable") %>%
setNames(c("Variable", "coef")))
) %>%
unnest(coefs) %>%
mutate(Variable = str_remove_all(Variable, "_X1"),
Variable = str_remove_all(Variable, "_1"),
Variable = str_remove_all(Variable, "_2"),
Variable = str_replace_all(Variable, "[.]", "_")) %>%
filter(Variable %in% ftrs$old_name) %>%
group_by(model, SID, outcome, .metric, Variable) %>%
summarize(coef = mean(coef)) %>%
ungroup()
profile_plot_fun <- function(d, model, metric, outcome){
o <- mapvalues(outcome, outcomes$trait, outcomes$long_name, warn_missing = F)
mod <- mapvalues(model, c("glmnet", "biscwit", "rf"), c("Elastic Net", "BISCWIT", "Random Forest"), warn_missing = F)
m <- mapvalues(metric, c("accuracy", "roc_auc"), c("Accuracy", "AUC"), warn_missing = F)
ttl <- sprintf("%s Predicting Future %s Using Best %s Models", mod, o, m)
min <- if(model == "glmnet") 5 else if (model == "biscwit") 1 else max(abs(d$coef), na.rm = T)
p <- d %>%
mutate(coef = ifelse(coef == 0, NA, coef)
, coef = ifelse(coef > min, min, ifelse(coef < -1*min, -1*min, coef))
, group = str_to_title(group)
, new_name = factor(new_name, rev(ftrs$new_name))) %>%
drop_na() %>%
ggplot(aes(x = SID, y = new_name, color = coef)) +
scale_color_gradient2(low = "blue"
, mid = "white"
, high = "red"
# , limits = c(-5,5)
) +
geom_point() +
labs(x = "Participant ID", y = NULL, color = "Coefficient"
, title = ttl) +
facet_grid(group ~ ., space = "free", scale = "free") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, face = "bold")
, axis.text.y = element_text(face = "bold")
, plot.title = element_text(hjust = .5, face = "bold")
, legend.position = "bottom"
, strip.background = element_rect(fill = "black")
, strip.text = element_text(face = "bold", color = "white", size = rel(1.2))
)
ggsave(p, file = sprintf("%s/05-results/05-figures/03-px-profiles/%s_%s_%s.pdf"
, local_path, outcome, model, metric)
, width = 12, height = 10)
ggsave(p, file = sprintf("%s/05-results/05-figures/03-px-profiles/png/%s_%s_%s.png"
, local_path, outcome, model, metric)
, width = 12, height = 10)
return(p)
}
profile_sim_plots <- profile_sim %>%
left_join(ftrs %>% select(group, Variable = old_name, new_name)) %>%
group_by(model, .metric, outcome) %>%
nest() %>%
ungroup() %>%
mutate(p = pmap(list(data, model, .metric, outcome), profile_plot_fun))
runApp('~/Library/CloudStorage/Box-Box/network/other projects/idio prediction/behavior-prediction')
